openapi: 3.0.3
info:
  title: Proyecto ASW
  description: |-
    Documentacion de las APIs del proyecto.
    Algunos enlaces Ãºtiles:
    - [Github](https://github.com/AlejandroLozanoAparicio1/asw-proyecto)
    - [Taiga](https://tree.taiga.io/project/akram_t-asw-proyecto/timeline)
  version: 1.0.0
servers:
  - url: https://asw-back-deployment-production.up.railway.app/
  - url: http://localhost:8080/
tags:
  - name: User
    description: Operations about user
  - name: Comment
    description: Operations about comment
  - name: News
    description: Operations about news
paths:
  /users:
    get:
      tags:
        - User
      summary: Get users
      description: ""
      operationId: getUsers
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /user:
    get:
      tags:
        - User
      summary: Get a user by their username
      description: ""
      operationId: getUser
      parameters:
        - name: username
          in: query
          description: The username that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
        "404":
          description: User not found
    post:
      tags:
        - User
      summary: Updates user
      description: ""
      operationId: setUser
      requestBody:
        description: User to Update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /register:
    post:
      tags:
        - User
      summary: Create a user
      description: This can only be done by the logged in user.
      operationId: createUser
      parameters:
        - name: username
          in: query
          description: The username to be created
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /commentlist/get:
    get:
      tags:
        - Comment
      summary: Get comment list
      description: ""
      operationId: commentList
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /comment/{id}:
    get:
      tags:
        - Comment
      summary: Get comment by id
      description: ""
      operationId: getComment
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
        "404":
          description: Comment not found
  /comment/user/{id}:
    get:
      tags:
        - Comment
      summary: Get user comments by id
      description: ""
      operationId: userComments
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
        "404":
          description: User not found
  /news/reply:
    put:
      tags:
        - Comment
      summary: Add a reply to a comment
      description: ""
      operationId: addReply
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      requestBody:
        description: The Comment to submit and the comment id to reply to
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplyDTO"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /comment/like:
    put:
      tags:
        - Comment
      summary: Like a comment
      description: ""
      operationId: like
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      requestBody:
        description: The User and comment id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeDTO"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /comments/liked:
    get:
      tags:
        - Comment
      summary: Get comments that the user has liked
      description: ""
      operationId: getCommentsLiked
      parameters:
        - name: username
          in: query
          description: The user that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
        "404":
          description: No comments found
  /comments/news/{id}:
    get:
      tags:
        - Comment
      summary: Get news comments
      description: ""
      operationId: getComments
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
        "404":
          description: No comments found
  /news:
    get:
      tags:
        - News
      summary: Get all news ordered by number of likes
      description: ""
      operationId: getNewsList
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /ask:
    get:
      tags:
        - News
      summary: Get news of type ask
      description: ""
      operationId: getNewsAsk
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /show:
    get:
      tags:
        - News
      summary: Get news of type show
      description: ""
      operationId: getNewsShow
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /newest:
    get:
      tags:
        - News
      summary: Get all news ordered by date
      description: ""
      operationId: getNewest
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/{id}:
    get:
      tags:
        - News
      summary: Get News with itemId = id
      description: ""
      operationId: getNews
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched
          required: true
          schema:
            type: integer
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/{id}/comments:
    get:
      tags:
        - News
      summary: Get Comments of the News with itemId = id
      description: ""
      operationId: getNewsComments
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched
          required: true
          schema:
            type: integer
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/user:
    get:
      tags:
        - News
      summary: Get News of the user with username = username
      description: ""
      operationId: getNewsByUsername
      parameters:
        - name: username
          in: query
          description: The username that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/liked:
    get:
      tags:
        - News
      summary: Get the News that the user with username = username has liked
      description: ""
      operationId: getLikedNews
      parameters:
        - name: username
          in: query
          description: The username that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /submit:
    post:
      tags:
        - News
      summary: Post News
      description: ""
      operationId: createNews
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      requestBody:
        description: The News to submit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewsDTO"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/newcomment:
    put:
      tags:
        - News
      summary: Comment on News
      description: ""
      operationId: addComment
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      requestBody:
        description: The Comment to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplyDTO"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
  /news/like:
    put:
      tags:
        - News
      summary: Like News
      description: ""
      operationId: likeNews
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: apiKey
          required: true
          schema:
            type: string
      requestBody:
        description: The User that wants to like the News and said News
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikeDTO"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid parameters
        "401":
          description: Not authorized
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1010
        username:
          type: string
          example: atafziel
        created:
          type: string
          format: date-time
          example: "29-11-2022 19:02:17"
        karma:
          type: integer
          example: 22
        about:
          type: string
          example: "Hello World!"
        maxvisit:
          type: integer
          example: 14
        minaway:
          type: integer
          example: 9
        delay:
          type: integer
          example: 1
        showdead:
          type: boolean
          example: false
        noprocrast:
          type: boolean
          example: false
      required:
        - id
        - username
    UserDTO:
      type: object
      properties:
        username:
          type: string
          example: atafziel
      required:
        - username
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1212
        user:
          $ref: "#/components/schemas/User"
        time:
          type: string
          format: date-time
          example: "29-11-2022 20:04:11"
        body:
          type: string
          example: "first comment"
        replies:
          type: array
          items:
            $ref: "#/components/schemas/Reply"
        likedBy:
          type: array
          items:
            $ref: "#/components/schemas/User"
      required:
        - id
        - user
        - body
    CommentDTO:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserDTO"
        body:
          type: string
          example: "first comment"
      required:
        - user
        - body
    Reply:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2048
        commentaryId:
          type: integer
          format: int64
          example: 1212
    News:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
          example: 53
        title:
          type: string
          example: "Github News"
        page_:
          type: string
          format: link
          example: "github.com"
        points:
          type: integer
          format: int64
          example: 0
        username:
          $ref: "#/components/schemas/User"
        datePublished:
          type: string
          format: date-time
          example: "12-11-2022 20:24:11"
        link:
          type: string
          format: link
          example: "https://github.com/AlejandroLozanoAparicio1/"
        text:
          type: string
          example: "Incredible News"
        type:
          type: string
          example: "url"
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
        likedBy:
          type: array
          items:
            $ref: "#/components/schemas/User"
        likes:
          type: integer
          format: int64
          example: 0
      required:
        - itemId
        - username
        - title
    NewsDTO:
      type: object
      properties:
        title:
          type: string
          example: "Github News"
        username:
          $ref: "#/components/schemas/UserDTO"
        link:
          type: string
          format: link
          example: "https://github.com/AlejandroLozanoAparicio1/"
        text:
          type: string
          example: "Incredible News"
      required:
        - text
        - username
        - title
    LikeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        user:
          $ref: "#/components/schemas/UserDTO"
      required:
        - user
        - id
    ReplyDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        comment:
          $ref: "#/components/schemas/CommentDTO"
      required:
        - user
        - id
